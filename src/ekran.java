
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Erdem
 */
public class ekran extends javax.swing.JFrame {

    /**
     * Creates new form ekran
     */
    public ekran() {
        initComponents();
        
        panel_filmter.setVisible(false);
        panel_arama.setVisible(false);
        panel_izleme.setVisible(false);
      panel_hata.setVisible(false);
       setTitle("NETFLİX");
        setLocation(150, 50);
    }
   
    String mail="";
    String sifre="";
    String dtarih="";
    String ids="";
    String isim="";
    String tur1="";
    String tur2="";
    String tur3="";
    int id,bayrak=0;
    int dtarihi;
    String filmadi1="film1";
    String filmadi2="film2";
    String filmadi3="film3";
    String filmadi4="film4";
    String filmadi5="film5";
    String filmadi6="film6";
    String arananfilmadi="";
    String arananfilmtur="";
    int tur1i,tur2i,tur3i;
    String bulunantur="";
    int userid;
    int filmid1;
    int filmid2;
    int filmid3;
    int filmid4;
    int filmid5;
    int filmid6;
    int filmidtur;
    int filmidad;
    int izlenenid;
    int a=2;
     int vvc;
     int vvv;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_giris = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        text_mail = new javax.swing.JTextField();
        but_giris = new javax.swing.JButton();
        text_sifre = new javax.swing.JTextField();
        text_id = new javax.swing.JTextField();
        text_dtarih = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        text_ad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        text_tur1 = new javax.swing.JTextField();
        text_tur2 = new javax.swing.JTextField();
        text_tur3 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        panel_filmter = new javax.swing.JPanel();
        but_film5 = new javax.swing.JButton();
        but_film6 = new javax.swing.JButton();
        but_film1 = new javax.swing.JButton();
        but_film2 = new javax.swing.JButton();
        but_film3 = new javax.swing.JButton();
        but_film4 = new javax.swing.JButton();
        but_tur3ad = new javax.swing.JButton();
        but_tur2ad = new javax.swing.JButton();
        but_tur1ad = new javax.swing.JButton();
        panel_izleme = new javax.swing.JPanel();
        but_izle = new javax.swing.JButton();
        leb_izleme_ekrani = new javax.swing.JLabel();
        but_filmadi = new javax.swing.JButton();
        panel_arama = new javax.swing.JPanel();
        text_ara_tur = new javax.swing.JTextField();
        text_ara_ad = new javax.swing.JTextField();
        but_turarama = new javax.swing.JButton();
        but_adarama = new javax.swing.JButton();
        but_aranan_ad = new javax.swing.JButton();
        but_aranan_tur = new javax.swing.JButton();
        panel_hata = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setResizable(false);

        panel_giris.setBackground(new java.awt.Color(102, 102, 102));
        panel_giris.setBorder(javax.swing.BorderFactory.createTitledBorder("Giriş Yapınız"));
        panel_giris.setToolTipText("Netflix ");

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("E posta");

        jLabel2.setBackground(new java.awt.Color(153, 153, 153));
        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Şifre");

        text_mail.setBackground(new java.awt.Color(204, 204, 204));
        text_mail.setText("E-Posta");

        but_giris.setBackground(new java.awt.Color(102, 0, 0));
        but_giris.setFont(new java.awt.Font("Trebuchet MS", 3, 48)); // NOI18N
        but_giris.setForeground(new java.awt.Color(102, 102, 102));
        but_giris.setText("Giriş");
        but_giris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_girisActionPerformed(evt);
            }
        });

        text_sifre.setBackground(new java.awt.Color(204, 204, 204));
        text_sifre.setText("Şifreniz...");

        text_id.setBackground(new java.awt.Color(204, 204, 204));
        text_id.setText("01234");

        text_dtarih.setBackground(new java.awt.Color(204, 204, 204));
        text_dtarih.setText("1998");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Doğum Yılınız Ör:1993");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("Kullanıcı İD");

        text_ad.setBackground(new java.awt.Color(204, 204, 204));
        text_ad.setText("Adınız...");

        jLabel5.setBackground(new java.awt.Color(204, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText("Adınız");

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 0));
        jLabel7.setText("Tür1");

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 0));
        jLabel8.setText("Tür2");

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 0, 0));
        jLabel9.setText("Tür3");

        text_tur1.setBackground(new java.awt.Color(204, 204, 204));
        text_tur1.setText("Tür...");
        text_tur1.setToolTipText("");

        text_tur2.setBackground(new java.awt.Color(204, 204, 204));
        text_tur2.setText("Tür...");

        text_tur3.setBackground(new java.awt.Color(204, 204, 204));
        text_tur3.setText("Tür...");

        jTextField1.setBackground(new java.awt.Color(204, 204, 204));
        jTextField1.setText("Soyadınız...");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 0, 0));
        jLabel11.setText("Soyadınız");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setBackground(new java.awt.Color(204, 0, 51));
        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("Giriş Yapmak İçin Sadece İD Ve E-Posta Kullanınız...");

        jLabel13.setBackground(new java.awt.Color(204, 0, 51));
        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 0, 0));
        jLabel13.setText("Yeni Kayıt İçin Bütün Bilgilerinizi Girerek Devam Ediniz...");

        javax.swing.GroupLayout panel_girisLayout = new javax.swing.GroupLayout(panel_giris);
        panel_giris.setLayout(panel_girisLayout);
        panel_girisLayout.setHorizontalGroup(
            panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_girisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_girisLayout.createSequentialGroup()
                        .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_girisLayout.createSequentialGroup()
                                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5)
                                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_sifre, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_dtarih, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_ad, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_id, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_mail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel6))
                        .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_girisLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_girisLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(text_tur2))
                                    .addGroup(panel_girisLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(text_tur1))))
                            .addGroup(panel_girisLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(text_tur3))))
                    .addGroup(panel_girisLayout.createSequentialGroup()
                        .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_girisLayout.createSequentialGroup()
                                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(267, 267, 267)
                                .addComponent(but_giris, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_girisLayout.setVerticalGroup(
            panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_girisLayout.createSequentialGroup()
                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(text_tur1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(text_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(text_tur2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(text_mail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_girisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(text_tur3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_girisLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_girisLayout.createSequentialGroup()
                        .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_ad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_sifre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_girisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_dtarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(panel_girisLayout.createSequentialGroup()
                        .addComponent(but_giris, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        panel_filmter.setBackground(new java.awt.Color(102, 102, 102));
        panel_filmter.setBorder(javax.swing.BorderFactory.createTitledBorder("Seçtiğiniz Türlere Göre En İyi Filmler"));

        but_film5.setBackground(new java.awt.Color(153, 0, 0));
        but_film5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        but_film5.setForeground(new java.awt.Color(204, 204, 204));
        but_film5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_film5ActionPerformed(evt);
            }
        });

        but_film6.setBackground(new java.awt.Color(153, 0, 0));
        but_film6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        but_film6.setForeground(new java.awt.Color(204, 204, 204));
        but_film6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_film6ActionPerformed(evt);
            }
        });

        but_film1.setBackground(new java.awt.Color(153, 0, 0));
        but_film1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        but_film1.setForeground(new java.awt.Color(204, 204, 204));
        but_film1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_film1ActionPerformed(evt);
            }
        });

        but_film2.setBackground(new java.awt.Color(153, 0, 0));
        but_film2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        but_film2.setForeground(new java.awt.Color(204, 204, 204));
        but_film2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_film2ActionPerformed(evt);
            }
        });

        but_film3.setBackground(new java.awt.Color(153, 0, 0));
        but_film3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        but_film3.setForeground(new java.awt.Color(204, 204, 204));
        but_film3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_film3ActionPerformed(evt);
            }
        });

        but_film4.setBackground(new java.awt.Color(153, 0, 0));
        but_film4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        but_film4.setForeground(new java.awt.Color(204, 204, 204));
        but_film4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_film4ActionPerformed(evt);
            }
        });

        but_tur3ad.setBackground(new java.awt.Color(51, 51, 51));
        but_tur3ad.setForeground(new java.awt.Color(255, 255, 255));

        but_tur2ad.setBackground(new java.awt.Color(51, 51, 51));
        but_tur2ad.setForeground(new java.awt.Color(255, 255, 255));

        but_tur1ad.setBackground(new java.awt.Color(51, 51, 51));
        but_tur1ad.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panel_filmterLayout = new javax.swing.GroupLayout(panel_filmter);
        panel_filmter.setLayout(panel_filmterLayout);
        panel_filmterLayout.setHorizontalGroup(
            panel_filmterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_filmterLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(panel_filmterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(but_film1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(but_film2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_tur1ad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panel_filmterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(but_film4, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(but_film3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_tur2ad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panel_filmterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_tur3ad, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(but_film6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_film5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        panel_filmterLayout.setVerticalGroup(
            panel_filmterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_filmterLayout.createSequentialGroup()
                .addGroup(panel_filmterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(but_tur3ad, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(but_tur2ad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_tur1ad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_filmterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(but_film1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(but_film3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_film5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_filmterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_filmterLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(but_film2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(but_film4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(but_film6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        panel_izleme.setBackground(new java.awt.Color(102, 102, 102));
        panel_izleme.setBorder(javax.swing.BorderFactory.createTitledBorder("İyi Seyirler"));

        but_izle.setBackground(new java.awt.Color(153, 0, 0));
        but_izle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        but_izle.setForeground(new java.awt.Color(204, 204, 204));
        but_izle.setText("İzle");
        but_izle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_izleActionPerformed(evt);
            }
        });

        leb_izleme_ekrani.setBackground(new java.awt.Color(0, 0, 0));
        leb_izleme_ekrani.setForeground(new java.awt.Color(255, 255, 255));
        leb_izleme_ekrani.setText("Video Eklenmedi");

        but_filmadi.setBackground(new java.awt.Color(153, 0, 0));
        but_filmadi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        but_filmadi.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout panel_izlemeLayout = new javax.swing.GroupLayout(panel_izleme);
        panel_izleme.setLayout(panel_izlemeLayout);
        panel_izlemeLayout.setHorizontalGroup(
            panel_izlemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_izlemeLayout.createSequentialGroup()
                .addComponent(leb_izleme_ekrani, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel_izlemeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_izlemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(but_filmadi, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_izle, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_izlemeLayout.setVerticalGroup(
            panel_izlemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_izlemeLayout.createSequentialGroup()
                .addComponent(but_filmadi, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leb_izleme_ekrani, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(but_izle, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        panel_arama.setBackground(new java.awt.Color(102, 102, 102));
        panel_arama.setBorder(javax.swing.BorderFactory.createTitledBorder("Film Ara"));
        panel_arama.setToolTipText("Netflix");

        text_ara_tur.setBackground(new java.awt.Color(204, 204, 204));

        text_ara_ad.setBackground(new java.awt.Color(204, 204, 204));

        but_turarama.setBackground(new java.awt.Color(153, 0, 0));
        but_turarama.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        but_turarama.setForeground(new java.awt.Color(204, 204, 204));
        but_turarama.setText("Türe Göre Ara");
        but_turarama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_turaramaActionPerformed(evt);
            }
        });

        but_adarama.setBackground(new java.awt.Color(153, 0, 0));
        but_adarama.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        but_adarama.setForeground(new java.awt.Color(204, 204, 204));
        but_adarama.setText("Film Adına Göre Ara");
        but_adarama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_adaramaActionPerformed(evt);
            }
        });

        but_aranan_ad.setBackground(new java.awt.Color(153, 0, 0));
        but_aranan_ad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        but_aranan_ad.setForeground(new java.awt.Color(204, 204, 204));
        but_aranan_ad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_aranan_adActionPerformed(evt);
            }
        });

        but_aranan_tur.setBackground(new java.awt.Color(153, 0, 0));
        but_aranan_tur.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        but_aranan_tur.setForeground(new java.awt.Color(204, 204, 204));
        but_aranan_tur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_aranan_turActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_aramaLayout = new javax.swing.GroupLayout(panel_arama);
        panel_arama.setLayout(panel_aramaLayout);
        panel_aramaLayout.setHorizontalGroup(
            panel_aramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_aramaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_aramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(text_ara_tur, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_turarama)
                    .addComponent(but_aranan_tur, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(panel_aramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(but_aranan_ad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_adarama, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text_ara_ad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        panel_aramaLayout.setVerticalGroup(
            panel_aramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_aramaLayout.createSequentialGroup()
                .addGroup(panel_aramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_ara_tur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_ara_ad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_aramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(but_turarama)
                    .addComponent(but_adarama))
                .addGap(37, 37, 37)
                .addGroup(panel_aramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(but_aranan_tur, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(but_aranan_ad, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        panel_hata.setBackground(new java.awt.Color(153, 0, 0));

        jLabel10.setForeground(new java.awt.Color(204, 255, 255));
        jLabel10.setText("İD Veya E-postanız Daha Önce Alınmış !");

        javax.swing.GroupLayout panel_hataLayout = new javax.swing.GroupLayout(panel_hata);
        panel_hata.setLayout(panel_hataLayout);
        panel_hataLayout.setHorizontalGroup(
            panel_hataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_hataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_hataLayout.setVerticalGroup(
            panel_hataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_hataLayout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jLabel10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_izleme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel_giris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(panel_hata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_filmter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_arama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel_giris, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panel_hata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(panel_izleme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel_filmter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_arama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void but_film4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_film4ActionPerformed
        // TODO add your handling code here:
        but_izle.setText("İzle");
         panel_izleme.setVisible(true);
         izlenenid=filmid4;
         but_filmadi.setText(filmadi4);
         
           Connection conn =null;
        String sql = "select * from userprog_table ";
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                if(userid==rs.getInt("user_id")){
                    if(izlenenid==rs.getInt("prog_id")){
                        
                        
                        but_izle.setText("Bu Filmi Daha Önce İzlediniz");
                    }
                }
              
            }
        conn.close();
        }
        catch (Exception e){
            System.out.println(" hayyyyyyyyyyyyyyyyyyyyyyyta");
        }
         
    }//GEN-LAST:event_but_film4ActionPerformed

    private void but_girisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_girisActionPerformed
        // TODO add your handling code here:
        mail = text_mail.getText();
        ids=text_id.getText();
        id= Integer.parseInt(ids);
        
       
            userid=id;

        
        
         Connection connaf =null;
         String sqlll = "select * from user";
        
        try{
            Class.forName("org.sqlite.JDBC");
            connaf = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = connaf.createStatement();
            ResultSet rs = st.executeQuery(sqlll);
            
            while(rs.next()){
             if( id==rs.getInt("user_id")){
                 if(mail.equals(rs.getString("mail"))){
     ///////////////////////////// id ve gmail dogru ise   /////////////////////////////  ///////////////////////////// 
                     bayrak++;
                     panel_giris.setEnabled(false);
                     panel_giris.setVisible(false);
                     panel_filmter.setVisible(true);
                     panel_arama.setVisible(true);
                     panel_hata.setVisible(false);
                     
                     tur1=rs.getString("tur1");
                     tur2=rs.getString("tur2");
                     tur3=rs.getString("tur3");
                     
                     but_tur1ad.setText(tur1);
                     but_tur2ad.setText(tur2);
                     but_tur3ad.setText(tur3);
                     
            String sqlara ="";
            Connection connaratur =null;
            if(      null != tur1)switch (tur1) {
                         case "Belgesel, Bilim ve Doğa":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='7' order by prog_puan desc";
                             break;
                         case "Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='8' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='9' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='10' order by prog_puan desc";
                             break;
                         case "Belgesel":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='11' order by prog_puan desc";
                             break;
                         case "Çocuk ve Aile, Komedi":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='12' order by prog_puan desc";
                             break;
                         case "Reality Program":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='13' order by prog_puan desc";
                             break;
                         case "Gerilim":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='14' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='15' order by prog_puan desc";
                             break;
                         case "Drama":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='16' order by prog_puan desc";
                             break;
                         case "Anime":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='17' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='18' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Drama":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='19' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar,Çocuk ve Aile":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='20' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='21' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Komedi":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='22' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='23' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='24' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon,Korku":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='25' order by prog_puan desc";
                             break;
                         case "Çocuk ve Aile":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='26' order by prog_puan desc";
                             break;
                         case "Çocuk ve Aile,Aksiyon ve Macera":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='27' order by prog_puan desc";
                             break;
                         case "Drama,Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='28' order by prog_puan desc";
                             break;
                         case "Drama,Komedi":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='29' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu,Drama":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='30' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Korku":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='32' order by prog_puan desc";
                             break;
                         case "Anime,Çocuk ve Aile":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='33' order by prog_puan desc";
                             break;
                         case "Anime,Aksiyon ve Macera":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='34' order by prog_puan desc";
                             break;
                         case "Drama,Korku":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='35' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Gerilim":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='36' order by prog_puan desc";
                             break;
                         default:
                             break;
                     }
            
        try{
            Class.forName("org.sqlite.JDBC");
            connaratur = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement stt = connaratur.createStatement();
            ResultSet rss = stt.executeQuery(sqlara);
                
                    
               
              filmadi1 = rss.getString("prog_name");
              filmid1 =rss.getInt("prog_id");
              but_film1.setText(filmadi1);
              rss.next();
              rss.next();
              filmadi2 = rss.getString("prog_name");
              filmid2 =rss.getInt("prog_id");
              but_film2.setText(filmadi2);
            connaratur.close();
        }
        catch (         ClassNotFoundException | SQLException e){
              filmadi1 = "Hatalı film türü";
              but_film1.setText(filmadi1);
              filmadi2 = "Hatalı film türü";
              but_film2.setText(filmadi2);
        }
        
           
            Connection connaratur2 =null;
            if(      null != tur2)switch (tur2) {
                         case "Belgesel, Bilim ve Doğa":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='7' order by prog_puan desc";
                             break;
                         case "Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='8' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='9' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='10' order by prog_puan desc";
                             break;
                         case "Belgesel":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='11' order by prog_puan desc";
                             break;
                         case "Çocuk ve Aile, Komedi":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='12' order by prog_puan desc";
                             break;
                         case "Reality Program":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='13' order by prog_puan desc";
                             break;
                         case "Gerilim":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='14' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='15' order by prog_puan desc";
                             break;
                         case "Drama":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='16' order by prog_puan desc";
                             break;
                         case "Anime":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='17' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='18' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Drama":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='19' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar,Çocuk ve Aile":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='20' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='21' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Komedi":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='22' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='23' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='24' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon,Korku":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='25' order by prog_puan desc";
                             break;
                         case "Çocuk ve Aile":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='26' order by prog_puan desc";
                             break;
                         case "Çocuk ve Aile,Aksiyon ve Macera":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='27' order by prog_puan desc";
                             break;
                         case "Drama,Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='28' order by prog_puan desc";
                             break;
                         case "Drama,Komedi":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='29' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu,Drama":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='30' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Korku":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='32' order by prog_puan desc";
                             break;
                         case "Anime,Çocuk ve Aile":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='33' order by prog_puan desc";
                             break;
                         case "Anime,Aksiyon ve Macera":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='34' order by prog_puan desc";
                             break;
                         case "Drama,Korku":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='35' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Gerilim":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='36' order by prog_puan desc";
                             break;
                         default:
                             break;
                     }
            
        try{
            Class.forName("org.sqlite.JDBC");
            connaratur2 = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement stt = connaratur2.createStatement();
            ResultSet rss = stt.executeQuery(sqlara);
                
                    
               
              filmadi3 = rss.getString("prog_name");
              filmid3 =rss.getInt("prog_id");
              but_film3.setText(filmadi3);
              rss.next();
              rss.next();
              filmadi4 = rss.getString("prog_name");
              filmid4 =rss.getInt("prog_id");
              but_film4.setText(filmadi4);
            connaratur2.close();
        }
        catch (         ClassNotFoundException | SQLException e){
              filmadi3 = "Hatalı film türü";
              but_film3.setText(filmadi3);
              filmadi4 = "Hatalı film türü";
              but_film4.setText(filmadi4);
        }
        
          Connection connaratur3 =null;
            if(      null != tur3)switch (tur3) {
                         case "Belgesel, Bilim ve Doğa":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='7' order by prog_puan desc";
                             break;
                         case "Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='8' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='9' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='10' order by prog_puan desc";
                             break;
                         case "Belgesel":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='11' order by prog_puan desc";
                             break;
                         case "Çocuk ve Aile, Komedi":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='12' order by prog_puan desc";
                             break;
                         case "Reality Program":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='13' order by prog_puan desc";
                             break;
                         case "Gerilim":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='14' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='15' order by prog_puan desc";
                             break;
                         case "Drama":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='16' order by prog_puan desc";
                             break;
                         case "Anime":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='17' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='18' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Drama":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='19' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar,Çocuk ve Aile":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='20' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='21' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Komedi":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='22' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='23' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='24' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon,Korku":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='25' order by prog_puan desc";
                             break;
                         case "Çocuk ve Aile":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='26' order by prog_puan desc";
                             break;
                         case "Çocuk ve Aile,Aksiyon ve Macera":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='27' order by prog_puan desc";
                             break;
                         case "Drama,Romantik":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='28' order by prog_puan desc";
                             break;
                         case "Drama,Komedi":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='29' order by prog_puan desc";
                             break;
                         case "Bilim Kurgu,Drama":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='30' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Korku":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='32' order by prog_puan desc";
                             break;
                         case "Anime,Çocuk ve Aile":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='33' order by prog_puan desc";
                             break;
                         case "Anime,Aksiyon ve Macera":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='34' order by prog_puan desc";
                             break;
                         case "Drama,Korku":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='35' order by prog_puan desc";
                             break;
                         case "Aksiyon ve Macera,Gerilim":
                             sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='36' order by prog_puan desc";
                             break;
                         default:
                             break;
                     }
            
        try{
            Class.forName("org.sqlite.JDBC");
            connaratur3 = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement sttt = connaratur3.createStatement();
            ResultSet rsss = sttt.executeQuery(sqlara);
                
                    
               
              filmadi5 = rsss.getString("prog_name");
              filmid5 =rsss.getInt("prog_id");
              but_film5.setText(filmadi5);
              rsss.next();
              rsss.next();
              filmadi6 = rsss.getString("prog_name");
              filmid6 =rsss.getInt("prog_id");
              but_film6.setText(filmadi6);
            connaratur3.close();
        }
        catch (Exception e){
              filmadi5 = "Hatalı film türü";
              but_film5.setText(filmadi5);
              filmadi6 = "Hatalı film türü";
              but_film6.setText(filmadi6);
        }
                     
                     
                    }else{
                     
                     
                     
                      } 
             }
              
            }
            connaf.close();
        }
        catch (ClassNotFoundException | SQLException e){
            System.out.println(" ummmmmmmmmmmmmmmmm");
        }
        
        ////////////////////////////////////// eger ilk giriyosa  /////////////////////////////////////////////////////
        ///////////////////////////////////////////////////ilk giriyorsa/////////////////////////////////////
                 if(bayrak==0){    
        sifre = text_sifre.getText();
        dtarih=text_dtarih.getText();
        dtarihi=Integer.parseInt(dtarih);
        isim=text_ad.getText();
        tur1=text_tur1.getText();
        tur2=text_tur2.getText();
        tur3=text_tur3.getText();
        
                     but_tur1ad.setText(tur1);
                     but_tur2ad.setText(tur2);
                     but_tur3ad.setText(tur3);
        
                     
                       Connection conn =null;
      try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            
            Statement stmt=conn.createStatement(); 
            String sorgu=String.format("insert into user values( '%s', '%s',%d,'%s','%s','%s','%s',%d)", isim,mail,dtarihi,sifre,tur1,tur2,tur3,id);
            int ekleme = stmt.executeUpdate(sorgu);
            System.out.println("Kayıt Eklendi");
            panel_giris.setEnabled(false);
            panel_giris.setVisible(false);
            panel_filmter.setVisible(true);
            panel_arama.setVisible(true);
            panel_hata.setVisible(false);
            
            conn.close();
            
            but_film3.setText(filmadi3);
            but_film4.setText(filmadi4);
            but_film5.setText(filmadi5);
            but_film6.setText(filmadi6);
            
            
        ///////////////////////////// TÜR 1 E GÖRE FİLM ADI CEK VE YAZ ///////////////////////////////////////////////
            Connection coner =null;
             String sqler="";
            if(null != tur1)switch (tur1) {
                case "Belgesel, Bilim ve Doğa":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='7' order by prog_puan desc";
                    break;
                case "Romantik":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='8' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='9' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='10' order by prog_puan desc";
                    break;
                case "Belgesel":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='11' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile, Komedi":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='12' order by prog_puan desc";
                    break;
                case "Reality Program":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='13' order by prog_puan desc";
                    break;
                case "Gerilim":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='14' order by prog_puan desc";
                    break;
                case "Bilim Kurgu":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='15' order by prog_puan desc";
                    break;
                case "Drama":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='16' order by prog_puan desc";
                    break;
                case "Anime":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='17' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Romantik":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='18' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Drama":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='19' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar,Çocuk ve Aile":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='20' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='21' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Komedi":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='22' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Romantik":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='23' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='24' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon,Korku":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='25' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='26' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile,Aksiyon ve Macera":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='27' order by prog_puan desc";
                    break;
                case "Drama,Romantik":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='28' order by prog_puan desc";
                    break;
                case "Drama,Komedi":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='29' order by prog_puan desc";
                    break;
                case "Bilim Kurgu,Drama":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='30' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Korku":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='32' order by prog_puan desc";
                    break;
                case "Anime,Çocuk ve Aile":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='33' order by prog_puan desc";
                    break;
                case "Anime,Aksiyon ve Macera":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='34' order by prog_puan desc";
                    break;
                case "Drama,Korku":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='35' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Gerilim":
                    sqler = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='36' order by prog_puan desc";
                    break;
                default:
                    break;
            }
            
        try{
            Class.forName("org.sqlite.JDBC");
            coner = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement sttt = coner.createStatement();
            ResultSet rsss = sttt.executeQuery(sqler);
                
                    
               
              filmadi1 = rsss.getString("prog_name");
              filmid1 =rsss.getInt("prog_id");
              but_film1.setText(filmadi1);
              rsss.next();
              rsss.next();
              filmadi2 = rsss.getString("prog_name");
              filmid2 =rsss.getInt("prog_id");
              but_film2.setText(filmadi2);
            coner.close();
        }
        catch ( ClassNotFoundException | SQLException e){
              filmadi1 = "Hatalı film türü";
              but_film1.setText(filmadi1);
              filmadi2 = "Hatalı film türü";
              but_film2.setText(filmadi2);
        }
        
        
          ///////////////////////////// TÜR 2 E GÖRE FİLM ADI CEK VE YAZ ///////////////////////////////////////////////
            Connection conaraturla =null;
             String sqlara1="";
             if(null != tur2)switch (tur2) {
                case "Belgesel, Bilim ve Doğa":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='7' order by prog_puan desc";
                    break;
                case "Romantik":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='8' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='9' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='10' order by prog_puan desc";
                    break;
                case "Belgesel":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='11' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile, Komedi":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='12' order by prog_puan desc";
                    break;
                case "Reality Program":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='13' order by prog_puan desc";
                    break;
                case "Gerilim":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='14' order by prog_puan desc";
                    break;
                case "Bilim Kurgu":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='15' order by prog_puan desc";
                    break;
                case "Drama":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='16' order by prog_puan desc";
                    break;
                case "Anime":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='17' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Romantik":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='18' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Drama":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='19' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar,Çocuk ve Aile":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='20' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='21' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Komedi":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='22' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Romantik":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='23' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='24' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon,Korku":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='25' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='26' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile,Aksiyon ve Macera":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='27' order by prog_puan desc";
                    break;
                case "Drama,Romantik":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='28' order by prog_puan desc";
                    break;
                case "Drama,Komedi":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='29' order by prog_puan desc";
                    break;
                case "Bilim Kurgu,Drama":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='30' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Korku":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='32' order by prog_puan desc";
                    break;
                case "Anime,Çocuk ve Aile":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='33' order by prog_puan desc";
                    break;
                case "Anime,Aksiyon ve Macera":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='34' order by prog_puan desc";
                    break;
                case "Drama,Korku":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='35' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Gerilim":
                    sqlara1 = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='36' order by prog_puan desc";
                    break;
                default:
                    break;
            }
            
        try{
            Class.forName("org.sqlite.JDBC");
            conaraturla = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement sttt = conaraturla.createStatement();
            ResultSet rsss = sttt.executeQuery(sqlara1);
                
                    
               
              filmadi3 = rsss.getString("prog_name");
              filmid3 =rsss.getInt("prog_id");
              but_film3.setText(filmadi3);
              rsss.next();
              rsss.next();
              filmadi4 = rsss.getString("prog_name");
              filmid4 =rsss.getInt("prog_id");
              but_film4.setText(filmadi4);
            conaraturla.close();
        }
        catch (Exception e){
              filmadi3 = "Hatalı film türü";
              but_film3.setText(filmadi3);
              filmadi4 = "Hatalı film türü";
              but_film4.setText(filmadi4);
        }
        
        
         ///////////////////////////// TÜR 3 YE GÖRE FİLM ADI CEK VE YAZ ///////////////////////////////////////////////
             Connection connaraturtla =null;
             String sqlarat="";
            if(null != tur3)switch (tur3) {
                case "Belgesel, Bilim ve Doğa":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='7' order by prog_puan desc";
                    break;
                case "Romantik":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='8' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='9' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='10' order by prog_puan desc";
                    break;
                case "Belgesel":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='11' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile, Komedi":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='12' order by prog_puan desc";
                    break;
                case "Reality Program":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='13' order by prog_puan desc";
                    break;
                case "Gerilim":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='14' order by prog_puan desc";
                    break;
                case "Bilim Kurgu":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='15' order by prog_puan desc";
                    break;
                case "Drama":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='16' order by prog_puan desc";
                    break;
                case "Anime":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='17' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Romantik":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='18' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Drama":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='19' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar,Çocuk ve Aile":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='20' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='21' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Komedi":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='22' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Romantik":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='23' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='24' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon,Korku":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='25' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='26' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile,Aksiyon ve Macera":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='27' order by prog_puan desc";
                    break;
                case "Drama,Romantik":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='28' order by prog_puan desc";
                    break;
                case "Drama,Komedi":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='29' order by prog_puan desc";
                    break;
                case "Bilim Kurgu,Drama":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='30' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Korku":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='32' order by prog_puan desc";
                    break;
                case "Anime,Çocuk ve Aile":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='33' order by prog_puan desc";
                    break;
                case "Anime,Aksiyon ve Macera":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='34' order by prog_puan desc";
                    break;
                case "Drama,Korku":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='35' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Gerilim":
                    sqlarat = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='36' order by prog_puan desc";
                    break;
                default:
                    break;
            }
            
        try{
            Class.forName("org.sqlite.JDBC");
            connaraturtla = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement sttt = connaraturtla.createStatement();
            ResultSet rsss = sttt.executeQuery(sqlarat);
                
                    
               
              filmadi5 = rsss.getString("prog_name");
              filmid5 =rsss.getInt("prog_id");
              but_film5.setText(filmadi5);
              rsss.next();
              rsss.next();
              filmadi6 = rsss.getString("prog_name");
              filmid6 =rsss.getInt("prog_id");
              but_film6.setText(filmadi6);
            connaraturtla.close();
        }
        catch ( ClassNotFoundException | SQLException e){
              filmadi5 = "Hatalı film türü";
              but_film5.setText(filmadi5);
              filmadi6 = "Hatalı film türü";
              but_film6.setText(filmadi6);
        }
       
        
            
        }catch(ClassNotFoundException | SQLException e){ 
          System.out.println("hataaa ....");
        panel_hata.setVisible(true);
        }
                     
                 }          
      
      
        
        
        
    }//GEN-LAST:event_but_girisActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void but_adaramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_adaramaActionPerformed
        // TODO add your handling code here:
        arananfilmadi=text_ara_ad.getText();
        
        
            Connection connara =null;
            String sqlara = "select * from program_table ";
        try{
            Class.forName("org.sqlite.JDBC");
            connara = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = connara.createStatement();
            ResultSet rs = st.executeQuery(sqlara);
              but_aranan_ad.setText("Film Bulunamadı");
            while(rs.next()){
                if(rs.getString("prog_name") == null ? arananfilmadi == null : rs.getString("prog_name").equals(arananfilmadi)){
                    but_aranan_ad.setText(arananfilmadi);
                     vvv =rs.getInt("prog_id");
                    
                } 
            }
              
           connara.close();   
        }
        catch (ClassNotFoundException | SQLException e){
             System.out.println("aramada hata film adı");
         
        }
    }//GEN-LAST:event_but_adaramaActionPerformed

    private void but_turaramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_turaramaActionPerformed
            arananfilmtur=text_ara_tur.getText();
            String sqlara ="";
            Connection connaratur =null;
            if(null != arananfilmtur)switch (arananfilmtur) {
                case "Belgesel, Bilim ve Doğa":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='7' order by prog_puan desc";
                    break;
                case "Romantik":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='8' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='9' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='10' order by prog_puan desc";
                    break;
                case "Belgesel":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='11' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile, Komedi":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='12' order by prog_puan desc";
                    break;
                case "Reality Program":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='13' order by prog_puan desc";
                    break;
                case "Gerilim":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='14' order by prog_puan desc";
                    break;
                case "Bilim Kurgu":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='15' order by prog_puan desc";
                    break;
                case "Drama":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='16' order by prog_puan desc";
                    break;
                case "Anime":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='17' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Romantik":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='18' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Drama":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='19' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera, Bilim Kurgu ve Fantastik Yapımlar,Çocuk ve Aile":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='20' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='21' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Komedi":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='22' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Romantik":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='23' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='24' order by prog_puan desc";
                    break;
                case "Bilim Kurgu ve Fantastik Yapımlar,Aksiyon,Korku":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='25' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='26' order by prog_puan desc";
                    break;
                case "Çocuk ve Aile,Aksiyon ve Macera":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='27' order by prog_puan desc";
                    break;
                case "Drama,Romantik":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='28' order by prog_puan desc";
                    break;
                case "Drama,Komedi":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='29' order by prog_puan desc";
                    break;
                case "Bilim Kurgu,Drama":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='30' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Korku":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='32' order by prog_puan desc";
                    break;
                case "Anime,Çocuk ve Aile":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='33' order by prog_puan desc";
                    break;
                case "Anime,Aksiyon ve Macera":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='34' order by prog_puan desc";
                    break;
                case "Drama,Korku":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='35' order by prog_puan desc";
                    break;
                case "Aksiyon ve Macera,Gerilim":
                    sqlara = "select * from program_table join connection_table on program_table.prog_id = connection_table.prog_id  where tur_id='36' order by prog_puan desc";
                    break;
                default:
                    break;
            }
            
        try{
            Class.forName("org.sqlite.JDBC");
            connaratur = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = connaratur.createStatement();
            ResultSet rs = st.executeQuery(sqlara);
                
                    bulunantur=rs.getString("prog_name");
                  
                              vvc =rs.getInt("prog_id");
                              
                    but_aranan_tur.setText(bulunantur);
            connaratur.close();
        }
        catch (Exception e){
             System.out.println("aramada hata film adı");
             but_aranan_tur.setText("Tür Bulunamadı");
        }
          
    }//GEN-LAST:event_but_turaramaActionPerformed

    private void but_film1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_film1ActionPerformed
        // TODO add your handling code here:
        but_izle.setText("İzle");
        panel_izleme.setVisible(true);
        izlenenid=filmid1;
        but_filmadi.setText(filmadi1);
        
          Connection conn =null;
        String sql = "select * from userprog_table ";
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                if(userid==rs.getInt("user_id")){
                    if(izlenenid==rs.getInt("prog_id")){
                        
                        
                        but_izle.setText("Bu Filmi Daha Önce İzlediniz");
                    }
                }
              
            }
        conn.close();
        }
        catch (Exception e){
            System.out.println(" hayyyyyyyyyyyyyyyyyyyyyyyta");
        }
        
    }//GEN-LAST:event_but_film1ActionPerformed

    private void but_film2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_film2ActionPerformed
        // TODO add your handling code here:
        but_izle.setText("İzle");
         panel_izleme.setVisible(true);
         izlenenid=filmid2;
         but_filmadi.setText(filmadi2);
         
           Connection conn =null;
        String sql = "select * from userprog_table ";
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                if(userid==rs.getInt("user_id")){
                    if(izlenenid==rs.getInt("prog_id")){
                        
                        
                        but_izle.setText("Bu Filmi Daha Önce İzlediniz");
                    }
                }
              
            }
        conn.close();
        }
        catch (Exception e){
            System.out.println(" hayyyyyyyyyyyyyyyyyyyyyyyta");
        }
         
    }//GEN-LAST:event_but_film2ActionPerformed

    private void but_film3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_film3ActionPerformed
        // TODO add your handling code here:
        but_izle.setText("İzle");
         panel_izleme.setVisible(true);
         izlenenid=filmid3;
         but_filmadi.setText(filmadi3);
         
           Connection conn =null;
        String sql = "select * from userprog_table ";
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                if(userid==rs.getInt("user_id")){
                    if(izlenenid==rs.getInt("prog_id")){
                        
                        
                        but_izle.setText("Bu Filmi Daha Önce İzlediniz");
                    }
                }
              
            }
        conn.close();
        }
        catch (Exception e){
            System.out.println(" hayyyyyyyyyyyyyyyyyyyyyyyta");
        }
         
    }//GEN-LAST:event_but_film3ActionPerformed

    private void but_film5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_film5ActionPerformed
        // TODO add your handling code here:
        but_izle.setText("İzle");
         panel_izleme.setVisible(true);
        izlenenid=filmid5;
        but_filmadi.setText(filmadi5);
        
          Connection conn =null;
        String sql = "select * from userprog_table ";
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                if(userid==rs.getInt("user_id")){
                    if(izlenenid==rs.getInt("prog_id")){
                        
                        
                        but_izle.setText("Bu Filmi Daha Önce İzlediniz");
                    }
                }
              
            }
        conn.close();
        }
        catch (Exception e){
            System.out.println(" hayyyyyyyyyyyyyyyyyyyyyyyta");
        }
        
    }//GEN-LAST:event_but_film5ActionPerformed

    private void but_film6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_film6ActionPerformed
        // TODO add your handling code here:
        but_izle.setText("İzle");
         panel_izleme.setVisible(true);
         izlenenid=filmid6;
         but_filmadi.setText(filmadi6);
         
           Connection conn =null;
        String sql = "select * from userprog_table ";
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                if(userid==rs.getInt("user_id")){
                    if(izlenenid==rs.getInt("prog_id")){
                        
                        
                        but_izle.setText("Bu Filmi Daha Önce İzlediniz");
                    }
                }
              
            }
        conn.close();
        }
        catch (Exception e){
            System.out.println(" hayyyyyyyyyyyyyyyyyyyyyyyta");
        }
         
    }//GEN-LAST:event_but_film6ActionPerformed

    private void but_izleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_izleActionPerformed
        // TODO add your handling code here:
            String arre="5";
             String brre="6";
        
        Connection conizle =null;
        
        try{
            Class.forName("org.sqlite.JDBC");
            conizle = DriverManager.getConnection("jdbc:sqlite:testNF.db");
           
            Statement stmt=conizle.createStatement(); 
            String sorgu=String.format("insert into userprog_table values( %d, %d,%d,%d,'%s','%s')", 21,22,23,24,userid,izlenenid);
            int ekleme = stmt.executeUpdate(sorgu);
            System.out.println("Kayıt Eklendihhhhhoooo");
            conizle.close();
        }catch(SQLException e){ System.out.println(e);} catch (ClassNotFoundException ex) {
            Logger.getLogger(ekran.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    
        
    }//GEN-LAST:event_but_izleActionPerformed

    private void but_aranan_turActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_aranan_turActionPerformed
        // TODO add your handling code here:
        but_izle.setText("İzle");
         panel_izleme.setVisible(true);
          izlenenid=vvc;
         but_filmadi.setText(bulunantur);
         
           Connection conn =null;
        String sql = "select * from userprog_table ";
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                if(userid==rs.getInt("user_id")){
                    if(izlenenid==rs.getInt("prog_id")){
                        
                        
                        but_izle.setText("Bu Filmi Daha Önce İzlediniz");
                    }
                }
              
            }
        conn.close();
        }
        catch (Exception e){
            System.out.println(" hayyyyyyyyyyyyyyyyyyyyyyyta");
        }
         
    }//GEN-LAST:event_but_aranan_turActionPerformed

    private void but_aranan_adActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_aranan_adActionPerformed
        // TODO add your handling code here:
        but_izle.setText("İzle");
         panel_izleme.setVisible(true);
         izlenenid=vvv;
         but_filmadi.setText(arananfilmadi);
        
        Connection conn =null;
        String sql = "select * from userprog_table ";
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:testNF.db");
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                if(userid==rs.getInt("user_id")){
                    if(izlenenid==rs.getInt("prog_id")){
                        
                        
                        but_izle.setText("Bu Filmi Daha Önce İzlediniz");
                    }
                }
              
            }
        conn.close();
        }
        catch (Exception e){
            System.out.println(" hayyyyyyyyyyyyyyyyyyyyyyyta");
        }
        
    }//GEN-LAST:event_but_aranan_adActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ekran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new ekran().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_adarama;
    private javax.swing.JButton but_aranan_ad;
    private javax.swing.JButton but_aranan_tur;
    private javax.swing.JButton but_film1;
    private javax.swing.JButton but_film2;
    private javax.swing.JButton but_film3;
    private javax.swing.JButton but_film4;
    private javax.swing.JButton but_film5;
    private javax.swing.JButton but_film6;
    private javax.swing.JButton but_filmadi;
    private javax.swing.JButton but_giris;
    private javax.swing.JButton but_izle;
    private javax.swing.JButton but_tur1ad;
    private javax.swing.JButton but_tur2ad;
    private javax.swing.JButton but_tur3ad;
    private javax.swing.JButton but_turarama;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel leb_izleme_ekrani;
    private javax.swing.JPanel panel_arama;
    private javax.swing.JPanel panel_filmter;
    private javax.swing.JPanel panel_giris;
    private javax.swing.JPanel panel_hata;
    private javax.swing.JPanel panel_izleme;
    private javax.swing.JTextField text_ad;
    private javax.swing.JTextField text_ara_ad;
    private javax.swing.JTextField text_ara_tur;
    private javax.swing.JTextField text_dtarih;
    private javax.swing.JTextField text_id;
    private javax.swing.JTextField text_mail;
    private javax.swing.JTextField text_sifre;
    private javax.swing.JTextField text_tur1;
    private javax.swing.JTextField text_tur2;
    private javax.swing.JTextField text_tur3;
    // End of variables declaration//GEN-END:variables
}
